{"ast":null,"code":"var _jsxFileName = \"/Users/frankscheuer/Desktop/code/star-wars/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './SASS/Main.scss';\nimport Characters from './Characters';\nimport { thisTypeAnnotation } from '@babel/types';\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.favoritesHandler = favorite => {\n      let fav = [...this.state.favorites, favorite];\n      let existsIndex = this.state.favorites.indexOf(favorite);\n\n      if (existsIndex === -1) {\n        this.setState({\n          favorites: fav\n        });\n      } else {\n        let without = [...this.state.favorites];\n        without.splice(existsIndex, 1);\n        this.setState({\n          favorites: without\n        });\n      }\n    };\n\n    this.chatRouteHandler = character => {\n      console.log(character);\n      this.setState({\n        chatAbout: character\n      });\n    };\n\n    this.txtChangedHandler = event => {\n      const inputValue = event.target.value;\n      this.setState({\n        inputMessage: inputValue\n      });\n    };\n\n    this.messageSubmit = event => {\n      const messages = [...this.state.allMessages, this.state.inputMessage];\n      this.setState({\n        allMessages: messages\n      });\n    };\n\n    this.state = {\n      favorites: [],\n      chatAbout: '',\n      inputMessage: '',\n      allMessages: []\n    };\n  }\n\n  render() {\n    console.log(this.state.inputMessage && this.state.allMessages);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"logo_image\",\n        src: \"https://proxy.duckduckgo.com/iu/?u=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F6%2F6c%2FStar_Wars_Logo.svg%2F1200px-Star_Wars_Logo.svg.png&f=1\",\n        alt: \"star wars logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Vote on your favorite characters. This was built using the \", React.createElement(\"a\", {\n        target: \"blank\",\n        href: \"https://www.swapi.co/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"star wars api\"), \".\"), this.state.favorites.length > 0 ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Your favorite characters are \", this.state.favorites.map(favorite => {\n        if (this.state.favorites.length > 1) {\n          if (favorite === this.state.favorites[this.state.favorites.length - 1]) {\n            return favorite;\n          } else {\n            return favorite + \", \";\n          }\n        } else {\n          return favorite;\n        }\n      })) : null, React.createElement(Characters, {\n        chatHandler: this.chatRouteHandler,\n        number: \"1\",\n        favorites: this.favoritesHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/discuss\",\n      exact: true,\n      render: () => React.createElement(\"div\", {\n        className: \"discussion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Discuss \", this.state.chatAbout), React.createElement(\"div\", {\n        className: \"discussion_chatbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.state.allMessages < 1 ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"It appears that there are no messages yet. Post the first comment below!\") : this.state.allMessages.map((message, i) => {\n        return React.createElement(\"p\", {\n          key: i,\n          className: \"discussion_chatboxmessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, message);\n      }), React.createElement(\"div\", {\n        className: \"discussion_chatbox_bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.txtChangedHandler,\n        type: \"text\",\n        placeholder: \"send message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.messageSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"\\u2192\")))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n} // <div className=\"buttons\">\n//           <Button className=\"buttons_button\" name=\"Characters\" />\n// </div>","map":{"version":3,"sources":["/Users/frankscheuer/Desktop/code/star-wars/src/App.js"],"names":["React","Component","Route","Characters","thisTypeAnnotation","App","constructor","favoritesHandler","favorite","fav","state","favorites","existsIndex","indexOf","setState","without","splice","chatRouteHandler","character","console","log","chatAbout","txtChangedHandler","event","inputValue","target","value","inputMessage","messageSubmit","messages","allMessages","render","length","map","message","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route } from 'react-router-dom';\nimport './SASS/Main.scss'\nimport Characters from './Characters'\nimport { thisTypeAnnotation } from '@babel/types';\n\n\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      favorites: [],\n      chatAbout: '',\n      inputMessage: '',\n      allMessages: []\n    }\n  }\n\n  favoritesHandler = (favorite) => {\n    let fav = [...this.state.favorites, favorite]\n    let existsIndex = this.state.favorites.indexOf(favorite);\n    if (existsIndex === -1) {\n      this.setState({ favorites: fav })\n    } else {\n      let without = [...this.state.favorites]\n      without.splice(existsIndex, 1)\n      this.setState({ favorites: without })\n    }\n  }\n\n  chatRouteHandler = (character) => {\n    console.log(character)\n    this.setState({ chatAbout: character })\n  }\n\n  txtChangedHandler = (event) => {\n    const inputValue = event.target.value;\n    this.setState({ inputMessage: inputValue })\n  }\n\n  messageSubmit = (event) => {\n    const messages = [...this.state.allMessages, this.state.inputMessage];\n    this.setState({ allMessages: messages })\n  }\n\n  render() {\n    console.log(this.state.inputMessage && this.state.allMessages)\n    return (\n      <div>\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <div>\n              <div className=\"logo\">\n                <img\n                  className=\"logo_image\"\n                  src=\"https://proxy.duckduckgo.com/iu/?u=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F6%2F6c%2FStar_Wars_Logo.svg%2F1200px-Star_Wars_Logo.svg.png&f=1\"\n                  alt=\"star wars logo\"\n                />\n              </div>\n              <p>Vote on your favorite characters. This was built using the <a target=\"blank\" href=\"https://www.swapi.co/\">star wars api</a>.</p>\n              {this.state.favorites.length > 0\n                ? (<p>Your favorite characters are {this.state.favorites.map((favorite) => {\n                  if (this.state.favorites.length > 1) {\n                    if (favorite === this.state.favorites[this.state.favorites.length - 1]) {\n                      return favorite\n                    } else {\n                      return favorite + \", \"\n                    }\n                  } else {\n                    return favorite\n                  }\n                })}</p>)\n                : null}\n              <Characters chatHandler={this.chatRouteHandler} number=\"1\" favorites={this.favoritesHandler} />\n            </div>\n          )}\n        />\n        <Route\n          path=\"/discuss\"\n          exact\n          render={() => (\n            <div className=\"discussion\">\n              <h1>Discuss {this.state.chatAbout}</h1>\n              <div className=\"discussion_chatbox\">\n                {this.state.allMessages < 1 ?\n                  <p>It appears that there are no messages yet. Post the first comment below!</p>\n                  : (\n                    this.state.allMessages.map((message, i) => {\n                      return (\n                        <p key={i} className=\"discussion_chatboxmessage\">{message}</p>\n                      )\n                    })\n                  )\n                }\n\n\n                <div className=\"discussion_chatbox_bar\">\n                  <input onChange={this.txtChangedHandler} type=\"text\" placeholder=\"send message\" />\n                  <button onClick={this.messageSubmit}>&#8594;</button>\n                </div>\n\n              </div>\n            </div>\n          )}\n        />\n      </div>\n    )\n  }\n}\n\n// <div className=\"buttons\">\n//           <Button className=\"buttons_button\" name=\"Characters\" />\n// </div>\n\n\n"]},"metadata":{},"sourceType":"module"}